{"version":3,"sources":["components/Count/styles.js","utilities/FormatTimeSince.js","utilities/GetDatePartsFromMilliseconds.js","utilities/PrettyTimeDiff.js","components/Count/Count.js","components/CountList/styles.js","components/CountList/CountList.js","utilities/Initials.js","components/Avatar/styles.js","components/Avatar/Avatar.js","components/Button/styles.js","components/Button/Button.js","components/Header/styles.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["styles","Count","display","fontSize","margin","textAlign","CountName","color","CountDate","addS","n","format","final","isAfterNow","years","months","days","hours","minutes","seconds","parts","push","ending","concat","join","trim","FormatTimeSince","timeSince","GetDatePartsFromMilliseconds","ms","PrettyTimeDiff","isoDate","now","Date","date","dateParse","dateDiffInMs","Math","abs","differenceInMilliseconds","dateParts","props","name","formattedDate","Object","core_browser_esm","css","_templateObject","_templateObject2","_templateObject3","CountList_styles","CountList","maxWidth","padding","events","CountList_templateObject","map","countdown","i","Count_Count","key","href","Initials","split","initials","substring","toUpperCase","length","Avatar_styles","Avatar","alignItems","backgroundColor","backgroundPosition","backgroundRepeat","backgroundSize","border","borderRadius","height","lineHeight","justifyContent","width","src","imgStyle","backgroundImage","Avatar_templateObject","style","Button_styles","Button","background","cursor","textDecoration","transition","&:hover","onClick","text","Button_templateObject","type","Header_styles","Header","borderBottom","HeaderName","HeaderUser","HeaderUserName","marginLeft","@media (max-width: 520px)","isSignedIn","photo","onSignInClick","Header_templateObject","Header_templateObject2","Header_templateObject3","react_default","a","Fragment","Avatar_Avatar","_templateObject4","Button_Button","DISCOVERY_DOCS","SCOPES","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","initGoogleClient","_this2","window","onLoadGoogleApi","gapi","load","script","document","createElement","body","appendChild","auth2","getAuthInstance","signIn","console","log","updateSigninStatus","setState","client","people","get","resourceName","personFields","then","response","person","result","names","find","x","metadata","primary","displayName","photos","url","reason","error","message","calendar","calendarList","list","batch","newBatch","items","forEach","req","request","path","id","params","q","timeMin","toISOString","add","execute","jsonResponse","rawResponse","keys","reduce","acc","resp","eventsForCalendar","event","start","dateTime","summary","apply","toConsumableArray","sort","b","init","apiKey","clientId","discoveryDocs","scope","listen","addGoogleApiScript","className","Header_Header","CountList_CountList","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce574698.chunk.js","sourcesContent":["export default {\n  Count: {\n    display: 'block',\n    fontSize: '1em',\n    margin: '1.2em 0',\n    textAlign: 'start'\n  },\n  CountName: {\n    color: '#dadada',\n    display: 'block'\n  },\n  CountDate: {\n    display: 'block',\n    fontSize: '1.3em'\n  }\n}\n","// Helper to add 's' to a number if other than 1\nfunction addS(n) {\n  return n === 1 ? '' : 's'\n}\n\nconst FormatTimeSince = function(timeSince, isAfterNow) {\n  \n  const {\n    years,\n    months,\n    days,\n    hours,\n    minutes,\n    seconds\n  } = timeSince\n\n  let final = {}\n\n  if (years) {\n    final = { years, months, days }\n  } else if (months) {\n    final = { months, days, hours }\n  } else if (days) {\n    final = { days, hours, minutes }\n  } else if (hours) {\n    final = { hours, minutes, seconds }\n  } else if (minutes) {\n    final = { minutes, seconds }\n  } else if (seconds) {\n    final = { seconds }\n  }\n\n  return format(final, isAfterNow)\n}\n\nconst format = function (final, isAfterNow) {\n  const {\n    years,\n    months,\n    days,\n    hours,\n    minutes,\n    seconds\n  } = final\n\n  const parts = []\n\n  if (years) {\n    parts.push(years + ' year' + addS(years))\n  }\n\n  if (months) {\n    parts.push(months + ' month' + addS(months))\n  }\n\n  if (days) {\n    parts.push(days + ' day' + addS(days))\n  }\n\n  if (hours) {\n    parts.push(hours + ' hour' + addS(hours))\n  }\n\n  if (minutes) {\n    parts.push(minutes + ' minute' + addS(minutes))\n  }\n\n  if (seconds) {\n    parts.push(seconds + ' second' + addS(seconds))\n  }\n\n  const beginning = isAfterNow ? 'in' : ''\n  const ending = isAfterNow ? '' : 'ago'\n\n  return `${beginning} ${parts.join(', ')} ${ending}`.trim()\n}\n\nexport default FormatTimeSince\n","const GetDatePartsFromMilliseconds = function(ms) {\n   \n  // Get the whole values of each unit, rounded down ( `|0` truncates)\n  const years =    ms              / 3.154e+10 | 0\n  const months =  (ms % 3.154e+10) / 2.628e+9  | 0\n  const days =    (ms % 2.628e+9)  / 8.64e7    | 0\n  const hours =   (ms % 8.64e7)    / 3.6e6     | 0\n  const minutes = (ms % 3.6e6)     / 6e4       | 0\n  const seconds = (ms % 6e4)       / 1e3       | 0\n  \n  return {\n    years,\n    months,\n    days,\n    hours,\n    minutes,\n    seconds\n  }\n}\n\nexport default GetDatePartsFromMilliseconds\n","import FormatTimeSince from \"./FormatTimeSince\";\nimport GetDatePartsFromMilliseconds from \"./GetDatePartsFromMilliseconds\";\n\nimport differenceInMilliseconds from 'date-fns/difference_in_milliseconds'\nimport dateParse from 'date-fns/parse'\n\nconst PrettyTimeDiff = function (isoDate) {\n\n  const now = new Date()\n  const date = dateParse(isoDate)\n\n  const isAfterNow = date > now\n  const dateDiffInMs = Math.abs(differenceInMilliseconds(date, now))\n\n  const dateParts = GetDatePartsFromMilliseconds(dateDiffInMs)\n  const formattedTimeDifference = FormatTimeSince(dateParts, isAfterNow)\n\n  return formattedTimeDifference\n}\n\nexport default PrettyTimeDiff\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport styles from './styles'\nimport PrettyTimeDiff from '../../utilities/PrettyTimeDiff'\n\nfunction Count(props) {\n  const {\n    date,\n    name\n  } = props\n\n  const formattedDate = PrettyTimeDiff(date)\n\n  return (\n    <div\n      css={css`${styles.Count}`}\n    >\n      <span\n        css={css`${styles.CountName}`}\n      >\n        {name}\n      </span>\n      <span\n        css={css`${styles.CountDate}`}\n      >\n        {formattedDate}\n      </span>\n    </div>\n  )\n}\n\nCount.propTypes = {\n  date: PropTypes.any.isRequired,\n  name: PropTypes.string.isRequired\n}\n\nexport default Count\n","export default {\n  CountList: {\n    maxWidth: '800px',\n    padding: '0 24px 1px'\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport Count from '../Count'\nimport styles from './styles'\n\nfunction CountList(props) {\n  const {\n    events\n  } = props\n\n  return (\n    <div\n      css={css`${styles.CountList}`}\n    >\n      {events ? (\n        events.map((countdown, i) =>\n          <Count\n            date={countdown.date}\n            key={i}\n            name={countdown.name}\n          />\n        )\n      ) : (\n        <p>\n          Looks like you don't have any countdowns! Go to <a href=\"https://calendar.google.com\">Google Calendar</a> and update the description for any event with \"<code>#countdown</code>\".\n        </p>\n      )}\n    </div>\n  )\n}\n\nCountList.propTypes = {\n  events: PropTypes.array\n}\n\nexport default CountList\n","const Initials = function(name) {\n  let parts = name.split(' '),\n    initials = parts[0].substring(0, 1).toUpperCase()\n\n  if (parts.length > 1) {\n    initials += parts[parts.length - 1].substring(0, 1).toUpperCase()\n  }\n\n  return initials\n}\n\nexport default Initials\n","const SIZE = '36px'\n\nexport default {\n  Avatar: {\n    alignItems: 'center',\n    backgroundColor: '#ffffff',\n    backgroundPosition: 'center center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    border: 'none',\n    borderRadius: '50%',\n    color: '#282c34',\n    display: 'inline-flex',\n    height: SIZE,\n    lineHeight: SIZE,\n    justifyContent: 'center',\n    width: SIZE\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport Initials from '../../utilities/Initials'\nimport styles from './styles'\n\nfunction Avatar(props) {\n  const {\n    name,\n    src\n  } = props\n\n  const initials = name ? Initials(name) : null\n\n  const imgStyle = src && { backgroundImage: `url(${src})` }\n\n  return (\n    <span\n      css={css`${styles.Avatar}`}\n      style={imgStyle || null}\n    >\n      {imgStyle ? null : initials}\n    </span>\n  )\n}\n\nAvatar.propTypes = {\n  name: PropTypes.string,\n  src: PropTypes.string\n}\n\nexport default Avatar\n","export default {\n  Button: {\n    background: 'transparent',\n    border: '2px solid currentColor',\n    borderRadius: '4px',\n    color: '#ffffff',\n    cursor: 'pointer',\n    display: 'inline-flex',\n    fontSize: 'inherit',\n    lineHeight: 'inherit',\n    padding: '4px 12px',\n    textDecoration: 'none',\n    transition: 'background-color 0.3s ease 0s',\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.1)'\n    }\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport styles from './styles'\n\nfunction Button(props) {\n  const {\n    onClick,\n    text\n  } = props\n\n  return (\n    <button\n      css={css`${styles.Button}`}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Button\n","export default {\n  Header: {\n    alignItems: 'center',\n    borderBottom: '1px solid #aaaaaa',\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '16px 24px'\n  },\n  HeaderName: {\n    fontSize: '1.8em'\n  },\n  HeaderUser: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  HeaderUserName: {\n    marginLeft: '8px',\n    '@media (max-width: 520px)': {\n      display: 'none'\n    }\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport Avatar from '../Avatar'\nimport Button from '../Button'\nimport styles from './styles'\n\nfunction Header(props) {\n  const {\n    isSignedIn,\n    name,\n    photo,\n    onSignInClick\n  } = props\n\n  return (\n    <header\n      css={css`${styles.Header}`}\n    >\n      <div\n        css={css`${styles.HeaderName}`}\n      >\n        CountdownApp\n      </div>\n\n      <div\n        css={css`${styles.HeaderUser}`}\n      >\n        {isSignedIn ? (\n          <React.Fragment>\n            <Avatar name={name} src={photo} />\n            <span\n              css={css`${styles.HeaderUserName}`}\n            >\n              {name}\n            </span>\n          </React.Fragment>\n        ) : (\n          <Button text=\"Sign In\" onClick={onSignInClick} />\n        )}\n      </div>\n\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  isSignedIn: PropTypes.bool,\n  name: PropTypes.string,\n  photo: PropTypes.string,\n  onSignInClick: PropTypes.func\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './App.css'\n\nimport CountList from './components/CountList'\n// import GoogleApi from './utilities/GoogleApi'\nimport Header from './components/Header'\n\nconst API_KEY = 'AIzaSyDgDZXqJtz2xSD8QfJlCGNf-SDI6n3eob0'\n\nconst CLIENT_ID = '176181994885-0d0qr7m4ksasjr8hq5uc35fma124pea7.apps.googleusercontent.com'\n\nconst DISCOVERY_DOCS = [\n  'https://people.googleapis.com/$discovery/rest?version=v1',\n  'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'\n]\n\nconst SCOPES = [\n  'profile',\n  'https://www.googleapis.com/auth/calendar.readonly'\n].join(' ')\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      events: null,\n      name: null,\n      photo: null,\n      isSignedIn: false\n    }\n\n    this.onSignInClick = this.onSignInClick.bind(this)\n    this.initGoogleClient = this.initGoogleClient.bind(this)\n  }\n\n  addGoogleApiScript() {\n    \n    // callback has to be on the window\n    window.onLoadGoogleApi = () => {\n      window.gapi.load('client:auth2', this.initGoogleClient)\n    }\n\n    const script = document.createElement('script')\n    script.src = 'https://apis.google.com/js/api.js?onload=onLoadGoogleApi'\n    script.type = 'text/javascript'\n    document.body.appendChild(script)\n  }\n\n  onSignInClick() {\n    const { gapi } = window\n    gapi.auth2.getAuthInstance().signIn()\n  }\n\n  updateSigninStatus(isSignedIn) {\n    console.log(isSignedIn)\n  }\n\n  initGoogleClient() {\n    const _this = this\n\n    const { gapi } = window\n\n    const updateSigninStatus = function(isSignedIn) {\n      \n      _this.setState({ isSignedIn: isSignedIn })\n\n      if (!isSignedIn) {\n        return\n      }\n\n      // get name/photo\n      gapi.client.people.people.get({\n        resourceName: 'people/me',\n        personFields: 'emailAddresses,names,photos'\n      }).then(function(response) {\n        const person = response.result\n\n        _this.setState({\n          name: person.names.find(x => x.metadata.primary).displayName,\n          photo: person.photos.find(x => x.metadata.primary).url\n        })\n\n      }, function(reason) {\n        console.log('Error: ' + reason.result.error.message);\n      })\n\n      // batch requests to get events across all calendars\n      gapi.client.calendar.calendarList.list().then(function (response) {\n        const batch = gapi.client.newBatch()\n        \n        response.result.items.forEach(calendar => {\n          const req = gapi.client.request({\n            path: 'https://www.googleapis.com/calendar/v3/calendars/' + calendar.id + '/events',\n            type: 'get',\n            params: {\n              q: '#countdown',\n              timeMin: (new Date()).toISOString()\n            }\n          })\n          batch.add(req)\n        })\n\n        batch.execute(function(jsonResponse, rawResponse) {\n          const events = Object.keys(jsonResponse).reduce(function (acc, key) {\n            const resp = jsonResponse[key]\n            if (resp && resp.result && resp.result.items) {\n              const eventsForCalendar = resp.result.items.map(event => {\n                return {\n                  date: event.start.dateTime || event.start.date,\n                  name: event.summary\n                }\n              })\n              acc.push(...eventsForCalendar)\n            }\n            return acc\n          }, []).sort((a, b) => new Date(a.date) - new Date(b.date))\n          \n          _this.setState({\n            events: events\n          })\n        })        \n      })\n    }\n\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function() {\n      \n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus)\n      \n      // Handle the initial sign-in state.\n      updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get())\n    })\n  }\n\n  handleGoogleClientLoad() {\n    // Load the API client and auth2 library\n    window.gapi.load('client:auth2', this.initGoogleClient);\n  }\n\n  componentDidMount() {\n    this.addGoogleApiScript()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Header\n          isSignedIn={this.state.isSignedIn}\n          onSignInClick={this.onSignInClick}\n          name={this.state.name}\n          photo={this.state.photo}\n        />\n\n        <CountList events={this.state.events} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}