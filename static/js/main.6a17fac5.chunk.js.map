{"version":3,"sources":["components/Count/styles.js","components/Count/Count.js","components/CountList/styles.js","components/CountList/CountList.js","utilities/Initials.js","components/Avatar/styles.js","components/Avatar/Avatar.js","components/Button/styles.js","components/Button/Button.js","components/Header/styles.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["styles","Count","display","fontSize","margin","textAlign","CountName","color","CountDate","props","date","name","formattedDate","format","Object","core_browser_esm","css","_templateObject","_templateObject2","_templateObject3","CountList_styles","CountList","maxWidth","padding","events","CountList_templateObject","map","countdown","i","Count_Count","key","href","Initials","parts","split","initials","substring","toUpperCase","length","Avatar_styles","Avatar","alignItems","backgroundColor","backgroundPosition","backgroundRepeat","backgroundSize","border","borderRadius","height","lineHeight","justifyContent","width","src","imgStyle","backgroundImage","concat","Avatar_templateObject","style","Button_styles","Button","background","cursor","textDecoration","transition","&:hover","onClick","text","Button_templateObject","type","Header_styles","Header","borderBottom","HeaderName","HeaderUser","isSignedIn","photo","onSignInClick","Header_templateObject","Header_templateObject2","Header_templateObject3","react_default","a","Fragment","Avatar_Avatar","Button_Button","DISCOVERY_DOCS","SCOPES","join","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","initGoogleClient","_this2","window","onLoadGoogleApi","gapi","load","script","document","createElement","body","appendChild","auth2","getAuthInstance","signIn","console","log","updateSigninStatus","setState","client","people","get","resourceName","personFields","then","response","person","result","names","find","x","metadata","primary","displayName","photos","url","reason","error","message","calendar","list","calendarId","showDeleted","singleEvents","orderBy","q","items","event","start","dateTime","summary","reverse","init","apiKey","clientId","discoveryDocs","scope","listen","addGoogleApiScript","className","Header_Header","CountList_CountList","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a17fac5.chunk.js","sourcesContent":["export default {\n  Count: {\n    display: 'block',\n    fontSize: '1em',\n    margin: '1em 0',\n    textAlign: 'start'\n  },\n  CountName: {\n    color: '#dadada',\n    display: 'block'\n  },\n  CountDate: {\n    display: 'block',\n    fontSize: '1.3em'\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport { format } from 'timeago.js';\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport styles from './styles'\n\nfunction Count(props) {\n  const {\n    date,\n    name\n  } = props\n\n  const formattedDate = format(date)\n\n  return (\n    <div\n      css={css`${styles.Count}`}\n    >\n      <span\n        css={css`${styles.CountName}`}\n      >\n        {name}\n      </span>\n      <span\n        css={css`${styles.CountDate}`}\n      >\n        {formattedDate}\n      </span>\n    </div>\n  )\n}\n\nCount.propTypes = {\n  date: PropTypes.any.isRequired,\n  name: PropTypes.string.isRequired\n}\n\nexport default Count\n","export default {\n  CountList: {\n    margin: '1em 0',\n    maxWidth: '800px',\n    padding: '0 24px'\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport Count from '../Count'\nimport styles from './styles'\n\nfunction CountList(props) {\n  const {\n    events\n  } = props\n\n  return (\n    <div\n      css={css`${styles.CountList}`}\n    >\n      {events ? (\n        events.map((countdown, i) =>\n          <Count\n            date={countdown.date}\n            key={i}\n            name={countdown.name}\n          />\n        )\n      ) : (\n        <div>\n          Looks like you don't have any countdowns! Go to <a href=\"https://calendar.google.com\">Google Calendar</a> and update the description for any event with \"<code>#countdown</code>\".\n        </div>\n      )}\n    </div>\n  )\n}\n\nCountList.propTypes = {\n  events: PropTypes.array\n}\n\nexport default CountList\n","const Initials = function(name) {\n  let parts = name.split(' '),\n    initials = parts[0].substring(0, 1).toUpperCase()\n\n  if (parts.length > 1) {\n    initials += parts[parts.length - 1].substring(0, 1).toUpperCase()\n  }\n\n  return initials\n}\n\nexport default Initials\n","const SIZE = '36px'\n\nexport default {\n  Avatar: {\n    alignItems: 'center',\n    backgroundColor: '#ffffff',\n    backgroundPosition: 'center center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    border: 'none',\n    borderRadius: '50%',\n    color: '#282c34',\n    display: 'inline-flex',\n    height: SIZE,\n    lineHeight: SIZE,\n    justifyContent: 'center',\n    width: SIZE\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport Initials from '../../utilities/Initials'\nimport styles from './styles'\n\nfunction Avatar(props) {\n  const {\n    name,\n    src\n  } = props\n\n  const initials = name ? Initials(name) : null\n\n  const imgStyle = src && { backgroundImage: `url(${src})` }\n\n  return (\n    <span\n      css={css`${styles.Avatar}`}\n      style={imgStyle || null}\n    >\n      {imgStyle ? null : initials}\n    </span>\n  )\n}\n\nAvatar.propTypes = {\n  name: PropTypes.string,\n  src: PropTypes.string\n}\n\nexport default Avatar\n","export default {\n  Button: {\n    background: 'transparent',\n    border: '2px solid currentColor',\n    borderRadius: '4px',\n    color: '#ffffff',\n    cursor: 'pointer',\n    display: 'inline-flex',\n    fontSize: 'inherit',\n    lineHeight: 'inherit',\n    padding: '4px 12px',\n    textDecoration: 'none',\n    transition: 'background-color 0.3s ease 0s',\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.1)'\n    }\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport styles from './styles'\n\nfunction Button(props) {\n  const {\n    onClick,\n    text\n  } = props\n\n  return (\n    <button\n      css={css`${styles.Button}`}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Button\n","export default {\n  Header: {\n    alignItems: 'center',\n    borderBottom: '1px solid #aaaaaa',\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '16px 24px'\n  },\n  HeaderName: {\n    fontSize: '1.8em'\n  },\n  HeaderUser: {\n    alignItems: 'center',\n    display: 'flex'\n  }\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line\nimport React from 'react'\n\nimport Avatar from '../Avatar'\nimport Button from '../Button'\nimport styles from './styles'\n\nfunction Header(props) {\n  const {\n    isSignedIn,\n    name,\n    photo,\n    onSignInClick\n  } = props\n\n  return (\n    <header\n      css={css`${styles.Header}`}\n    >\n      <div\n        css={css`${styles.HeaderName}`}\n      >\n        CountDownApp\n      </div>\n\n      <div\n        css={css`${styles.HeaderUser}`}\n      >\n        {isSignedIn ? (\n          <React.Fragment>\n            <Avatar name={name} src={photo} />\n            <span>{name}</span>\n          </React.Fragment>\n        ) : (\n          <Button text=\"Sign In\" onClick={onSignInClick} />\n        )}\n      </div>\n\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  isSignedIn: PropTypes.bool,\n  name: PropTypes.string,\n  photo: PropTypes.string,\n  onSignInClick: PropTypes.func\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './App.css'\n\nimport CountList from './components/CountList'\n// import GoogleApi from './utilities/GoogleApi'\nimport Header from './components/Header'\n\nconst API_KEY = 'AIzaSyDgDZXqJtz2xSD8QfJlCGNf-SDI6n3eob0'\n\nconst CLIENT_ID = '176181994885-0d0qr7m4ksasjr8hq5uc35fma124pea7.apps.googleusercontent.com'\n\nconst DISCOVERY_DOCS = [\n  'https://people.googleapis.com/$discovery/rest?version=v1',\n  'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'\n]\n\nconst SCOPES = [\n  'profile',\n  'https://www.googleapis.com/auth/calendar.readonly'\n].join(' ')\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      events: null,\n      name: null,\n      photo: null,\n      isSignedIn: false\n    }\n\n    this.onSignInClick = this.onSignInClick.bind(this)\n    this.initGoogleClient = this.initGoogleClient.bind(this)\n  }\n\n  addGoogleApiScript() {\n    \n    // callback has to be on the window\n    window.onLoadGoogleApi = () => {\n      window.gapi.load('client:auth2', this.initGoogleClient)\n    }\n\n    const script = document.createElement('script')\n    script.src = 'https://apis.google.com/js/api.js?onload=onLoadGoogleApi'\n    script.type = 'text/javascript'\n    document.body.appendChild(script)\n  }\n\n  onSignInClick() {\n    const { gapi } = window\n    gapi.auth2.getAuthInstance().signIn()\n  }\n\n  updateSigninStatus(isSignedIn) {\n    console.log(isSignedIn)\n  }\n\n  initGoogleClient() {\n    const _this = this\n\n    const { gapi } = window\n\n    const updateSigninStatus = function(isSignedIn) {\n      \n      _this.setState({ isSignedIn: isSignedIn })\n\n      if (!isSignedIn) {\n        return\n      }\n\n      // get name/photo\n      gapi.client.people.people.get({\n        resourceName: 'people/me',\n        personFields: 'emailAddresses,names,photos'\n      }).then(function(response) {\n        const person = response.result\n\n        _this.setState({\n          name: person.names.find(x => x.metadata.primary).displayName,\n          photo: person.photos.find(x => x.metadata.primary).url\n        })\n\n      }, function(reason) {\n        console.log('Error: ' + reason.result.error.message);\n      })\n\n      // get events\n      gapi.client.calendar.events.list({\n        'calendarId': 'primary',\n        'showDeleted': false,\n        'singleEvents': true,\n        'orderBy': 'startTime',\n        'q': '#countdown'\n      }).then(function(response) {\n        const events = response.result.items.map(event => {\n          return {\n            date: event.start.dateTime || event.start.date,\n            name: event.summary\n          }\n        }).reverse()\n\n        _this.setState({\n          events: events\n        })\n      })\n    }\n\n    gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function() {\n      \n      // Listen for sign-in state changes.\n      gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus)\n      \n      // Handle the initial sign-in state.\n      updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get())\n    })\n  }\n\n  handleGoogleClientLoad() {\n    // Load the API client and auth2 library\n    window.gapi.load('client:auth2', this.initGoogleClient);\n  }\n\n  componentDidMount() {\n    this.addGoogleApiScript()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Header\n          isSignedIn={this.state.isSignedIn}\n          onSignInClick={this.onSignInClick}\n          name={this.state.name}\n          photo={this.state.photo}\n        />\n\n        <CountList events={this.state.events} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}